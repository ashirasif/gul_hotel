// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

// model Post {
//     id        Int      @id @default(autoincrement())
//     name      String
//     createdAt DateTime @default(now())
//     updatedAt DateTime @updatedAt

//     createdBy   User   @relation(fields: [createdById], references: [id])
//     createdById String

//     @@index([name])
// }

// // Necessary for Next auth
// model Account {
//     id                String  @id @default(cuid())
//     userId            String
//     type              String
//     provider          String
//     providerAccountId String
//     refresh_token     String? // @db.Text
//     access_token      String? // @db.Text
//     expires_at        Int?
//     token_type        String?
//     scope             String?
//     id_token          String? // @db.Text
//     session_state     String?
//     user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

//     @@unique([provider, providerAccountId])
// }

// model Session {
//     id           String   @id @default(cuid())
//     sessionToken String   @unique
//     userId       String
//     expires      DateTime
//     user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
// }

// model User {
//     id            String    @id @default(cuid())
//     name          String?
//     email         String?   @unique
//     password String?
//     accounts      Account[]
//     sessions      Session[]
//     posts         Post[]
// }

model Rooms {
    id Int @id @default(autoincrement())
    name Int @unique
    images String
    floor String
    singleBed Int
    doubleBed Int
    bath Boolean @default(true)
    lcd Boolean
    fridge Boolean
    extraMattress Boolean
    price Int 
}

model Bookings {
    id Int @id @default(autoincrement())
    name String
    phone String
    email String
    status String @default("pending") 
    room Int
    from DateTime @db.Date
    till DateTime @db.Date
    price Int @default(1000)
}

model Expenses {
    id Int @id @default(autoincrement())
    name String
    amount Int
    date DateTime @db.Date
}
